{"version":3,"sources":["component/Header/Header.js","component/Table/TableColumn.js","component/Table/Table.js","component/Type/Type.js","component/chart-bar/ChartBar.js","data/localStorage.js","pages/details/Details.js","pages/pokedex/Pokedex.js","pages/mypokedex/Mypokedex.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","isActive","setisActive","to","exact","path","className","onClick","TableColumn","props","data","header","content","Table","map","item","index","Type","type","toUpperCase","ChartBar","prop","witdhChart","baseStat","colorBar","style","width","background","StorageAccess","checkingLocalStorage","Storage","alert","addToLocalStorage","myPokemonList","fetchLocalStorage","i","length","nickname","push","localStorage","setItem","JSON","stringify","getItem","parse","deleteFromLocalStorage","id","newPokemonList","filter","getPokemonCount","Details","pokemon","useParams","urlPokemonData","dataPokemon","setDataPokemon","setBaseStat","imageUrl","setImageUrl","dataTypePokemon","setdataTypePokemon","dataMove","setDataMove","isCatched","setisCatched","isGone","setisGone","setnickname","isUsedNickname","setisUsedNickname","isTooLong","setisTooLong","useEffect","fetch","then","response","json","responseJson","sprites","front_default","statArr","stat","stats","base_stat","heldItemArr","held_items","name","replace","abilityArr","abilities","ability","moveArr","moves","move","height","weight","typePokemon","types","action","onSubmit","event","preventDefault","dataInputJson","urlImage","placeholder","onChange","target","value","src","alt","Math","floor","random","Pokedex","urlList","setUrlList","urlNext","seturlNext","urlPrev","seturlPrev","pokemonList","setPokemonList","pokemonCount","setpokemonCount","urlDetail","newUrl","slice","lastIndexOf","changeURL","dataset","url","results","next","previous","string","charAt","Mypokedex","setmyPokemonList","refreshPokemon","capitalizeFirstLetter","releaseHandler","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8801128.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  const [isActive, setisActive] = useState(false);\r\n\r\n  const toogleActiveHandler = () => {\r\n    setisActive(!isActive);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Link to=\"/pokemon-app/\">\r\n        <Route exact path={[\"/pokemon-app/\"]}>\r\n          <h3 className=\"appName\">Pokemon</h3>\r\n        </Route>\r\n        <Route path={[\"/pokemon-app/detail/:pokemon\", \"/pokemon-app/mypokemon\"]}>\r\n          <div className=\"backButton\">\r\n            <h3>{\"<\"}</h3>\r\n          </div>\r\n        </Route>\r\n      </Link>\r\n\r\n      <div className={!isActive ? \"container\" : \"container change\"} onClick={toogleActiveHandler}>\r\n        <div className=\"bar1\"></div>\r\n        <div className=\"bar2\"></div>\r\n        <div className=\"bar3\"></div>\r\n      </div>\r\n\r\n      <nav className={!isActive ? \"active\" : \"\"}>\r\n        <div className=\"nav-list\">\r\n          <Link to=\"/pokemon-app/\">Pokedex</Link>\r\n        </div>\r\n        <div className=\"nav-list\">\r\n          <Link to=\"/pokemon-app/mypokemon\">My Pokemon</Link>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst TableColumn = (props) => {\r\n  return (\r\n    <div className=\"table-column\">\r\n      <div className=\"table-row title\">{props.data.header}</div>\r\n      <div className=\"table-row content\">{props.data.content}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableColumn;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\n\r\nimport \"./TableColumn\";\r\nimport TableColumn from \"./TableColumn\";\r\n\r\nconst Table = (props) => {\r\n  return (\r\n    <div className=\"table\">\r\n      {props.data.map((item, index) => (\r\n        <TableColumn data={item} key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport \"./type.css\";\r\n\r\nconst Type = (props) => {\r\n  return <div className={`type-label ${props.type}`}>{props.type.toUpperCase()}</div>;\r\n};\r\n\r\nexport default Type;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (prop) => {\r\n  const witdhChart = (prop.baseStat.data / 255) * 100;\r\n  let colorBar = \"\";\r\n\r\n  if (witdhChart <= 33) colorBar = \"#ff2b2b\";\r\n  else if (witdhChart <= 66) colorBar = \"#ffde4a\";\r\n  else colorBar = \"#28fa28\";\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar-row title\">{prop.baseStat.header}</div>\r\n      <div className=\"chart-bar-row content\">\r\n        <div className=\"line-bar\" style={{ width: `${witdhChart}%`, background: colorBar }}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","class StorageAccess {\r\n  static checkingLocalStorage = () => {\r\n    if (typeof Storage !== \"undefined\") {\r\n      return true;\r\n    } else {\r\n      alert(\"Your Browser Not Supported\");\r\n      return false;\r\n    }\r\n  };\r\n\r\n  static addToLocalStorage = (data) => {\r\n    let myPokemonList = this.fetchLocalStorage();\r\n\r\n    for (let i = 0; i < myPokemonList.length; i++) {\r\n      if (myPokemonList[i].nickname == data.nickname) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    myPokemonList.push(data);\r\n\r\n    localStorage.setItem(\"LOCAL_POKEMON_LIST\", JSON.stringify(myPokemonList));\r\n    return false;\r\n  };\r\n\r\n  static fetchLocalStorage = () => {\r\n    if (this.checkingLocalStorage()) {\r\n      if (localStorage.getItem(\"LOCAL_POKEMON_LIST\") !== null) return JSON.parse(localStorage.getItem(\"LOCAL_POKEMON_LIST\"));\r\n      else return [];\r\n    }\r\n  };\r\n\r\n  static deleteFromLocalStorage = (id) => {\r\n    let myPokemonList = this.fetchLocalStorage();\r\n\r\n    let newPokemonList = myPokemonList.filter((data) => data.nickname !== id);\r\n\r\n    localStorage.setItem(\"LOCAL_POKEMON_LIST\", JSON.stringify(newPokemonList));\r\n  };\r\n\r\n  static getPokemonCount = () => {\r\n    let myPokemonList = this.fetchLocalStorage();\r\n\r\n    return myPokemonList.length;\r\n  };\r\n}\r\n\r\nexport default StorageAccess;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Details.css\";\r\nimport Table from \"./../../component/Table/Table\";\r\nimport Type from \"../../component/Type/Type\";\r\nimport ChartBar from \"../../component/chart-bar/ChartBar\";\r\nimport { useParams } from \"react-router\";\r\nimport StorageAccess from \"../../data/localStorage\";\r\n\r\nconst Details = () => {\r\n  let { pokemon } = useParams();\r\n  const urlPokemonData = \"https://pokeapi.co/api/v2/pokemon/\" + pokemon;\r\n\r\n  const [dataPokemon, setDataPokemon] = useState([]);\r\n  const [baseStat, setBaseStat] = useState([]);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [dataTypePokemon, setdataTypePokemon] = useState([]);\r\n  const [dataMove, setDataMove] = useState([]);\r\n\r\n  const [isCatched, setisCatched] = useState(false);\r\n  const [isGone, setisGone] = useState(false);\r\n  const [nickname, setnickname] = useState(\"\");\r\n  const [isUsedNickname, setisUsedNickname] = useState(false);\r\n  const [isTooLong, setisTooLong] = useState(false);\r\n\r\n  const catchHandler = () => {\r\n    let a = Math.floor(Math.random() * 100);\r\n    if (a % 2 == 0) setisCatched(true);\r\n    else setisGone(true);\r\n  };\r\n\r\n  const changeInputHandler = (event) => {\r\n    setnickname(event.target.value);\r\n  };\r\n\r\n  const releaseHandler = () => {\r\n    setisCatched(false);\r\n  };\r\n\r\n  const closeAlertTooLong = () => {\r\n    setisTooLong(false);\r\n  };\r\n\r\n  const closeAlert = () => {\r\n    setisGone(false);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (nickname.length >= 8) {\r\n      setisTooLong(true);\r\n      return;\r\n    }\r\n\r\n    let dataInputJson = {\r\n      nickname: nickname,\r\n      pokemon: pokemon,\r\n      urlImage: imageUrl,\r\n    };\r\n\r\n    let isUsed = StorageAccess.addToLocalStorage(dataInputJson);\r\n\r\n    if (isUsed) {\r\n      setisUsedNickname(true);\r\n      return;\r\n    }\r\n\r\n    setisCatched(false);\r\n  };\r\n\r\n  const resubmitHandler = () => {\r\n    setisUsedNickname(false);\r\n  };\r\n\r\n  function fetchPokemonDataFromAPI() {\r\n    fetch(urlPokemonData)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setImageUrl(responseJson.sprites.front_default);\r\n\r\n        // Ekstrak base stat dari response API\r\n        let statArr = [];\r\n        let stat = [\"HP\", \"Attack\", \"Defense\", \"Sp. Att\", \"Sp. Def\", \"Speed\"];\r\n        for (let i = 0; i < stat.length; i++) {\r\n          statArr.push({\r\n            header: stat[i],\r\n            data: responseJson.stats[i].base_stat,\r\n          });\r\n        }\r\n        setBaseStat(statArr);\r\n\r\n        // Ekstrak heldItem data\r\n        let heldItemArr = \"\";\r\n        if (responseJson.held_items.length === 0) heldItemArr = \"No held items\";\r\n        else {\r\n          for (let i = 0; i < responseJson.held_items.length; i++) {\r\n            if (i != 0) heldItemArr += \", \";\r\n            heldItemArr += responseJson.held_items[i].item.name.replace(/-/g, \" \");\r\n          }\r\n        }\r\n\r\n        // Ekstrak ability\r\n        let abilityArr = \"\";\r\n        if (responseJson.abilities.length === 0) abilityArr = \"No ability found\";\r\n        else {\r\n          for (let i = 0; i < responseJson.abilities.length; i++) {\r\n            if (i != 0) abilityArr += \", \";\r\n            abilityArr += responseJson.abilities[i].ability.name.replace(/-/g, \" \");\r\n          }\r\n        }\r\n\r\n        let moveArr = [];\r\n        if (responseJson.moves.length === 0) abilityArr = \"No ability found\";\r\n        else {\r\n          for (let i = 0; i < responseJson.moves.length; i++) {\r\n            moveArr.push(responseJson.moves[i].move.name.replace(/-/g, \" \"));\r\n          }\r\n        }\r\n\r\n        setDataMove(moveArr);\r\n\r\n        const data = [\r\n          {\r\n            header: \"Height\",\r\n            content: `${responseJson.height / 10}m`,\r\n          },\r\n          {\r\n            header: \"Weight\",\r\n            content: `${responseJson.weight / 10}kg`,\r\n          },\r\n          {\r\n            header: \"Held Items\",\r\n            content: heldItemArr,\r\n          },\r\n          {\r\n            header: \"Ability\",\r\n            content: abilityArr,\r\n          },\r\n        ];\r\n\r\n        setDataPokemon(data);\r\n\r\n        // Ekstrak pokemon type\r\n        let typePokemon = [];\r\n        for (let i = 0; i < responseJson.types.length; i++) {\r\n          typePokemon.push(responseJson.types[i].type.name);\r\n        }\r\n\r\n        setdataTypePokemon(typePokemon);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPokemonDataFromAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"detail-box\">\r\n      {isCatched && isTooLong && (\r\n        <div className=\"alert\">\r\n          <p>Name must be less than 9 character</p>\r\n          <div className=\"btn btn-resubmit\" onClick={closeAlertTooLong}>\r\n            Close\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isGone && (\r\n        <div className=\"alert\">\r\n          <p>Pokemon has gone</p>\r\n          <div className=\"btn btn-resubmit\" onClick={closeAlert}>\r\n            Close\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isCatched && isUsedNickname && (\r\n        <div className=\"alert alert-used\">\r\n          <p>Name has been used.</p>\r\n          <div className=\"btn btn-resubmit\" onClick={resubmitHandler}>\r\n            Close\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isCatched && !isUsedNickname && !isTooLong && (\r\n        <div className=\"alert form-nickname-input\">\r\n          <h4>Pokemon Catched</h4>\r\n          <form action=\"\" onSubmit={submitHandler}>\r\n            <input type=\"text\" name=\"nickname\" id=\"nickname\" placeholder=\"Give nickname\" onChange={changeInputHandler} />\r\n            <div className=\"button-group\">\r\n              <div className=\"btn btn-release\" onClick={releaseHandler}>\r\n                Release\r\n              </div>\r\n              <button type=\"submit\" id=\"submit\" className=\"btn\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"detail-header\">\r\n        <h2 className=\"pokemon-name\">{pokemon}</h2>\r\n        <div className=\"type-box\">\r\n          {dataTypePokemon.map((item, index) => (\r\n            <Type type={item} key={index} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"detail-img\">\r\n        <img src={imageUrl} alt={pokemon} />\r\n      </div>\r\n      <div className=\"btn-catch\" onClick={catchHandler}>\r\n        Catch Now\r\n      </div>\r\n\r\n      <div className=\"detail-content-box\">\r\n        <div className=\"divider\"></div>\r\n        <div className=\"detail-info-box\">\r\n          <div className=\"detail-content\">\r\n            <h2>Overview</h2>\r\n            <Table data={dataPokemon} />\r\n          </div>\r\n\r\n          <div className=\"detail-content\">\r\n            <h2>Base Stat</h2>\r\n            {baseStat.map((item, index) => (\r\n              <ChartBar key={index} baseStat={item} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"move-content-box\">\r\n          <h2>Move Set</h2>\r\n          <div className=\"move-content\">\r\n            {dataMove.map((item, index) => (\r\n              <div className=\"move-box\" key={index}>\r\n                <small>{item}</small>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./pokedex.css\";\r\nimport StorageAccess from \"../../data/localStorage\";\r\n\r\nconst Pokedex = () => {\r\n  const [urlList, setUrlList] = useState(\"https://pokeapi.co/api/v2/pokemon?limit=20\");\r\n  const [urlNext, seturlNext] = useState();\r\n  const [urlPrev, seturlPrev] = useState();\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [pokemonCount, setpokemonCount] = useState(0);\r\n\r\n  function fetchAPI() {\r\n    fetch(urlList)\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setPokemonList(responseJson.results);\r\n        seturlNext(responseJson.next);\r\n        seturlPrev(responseJson.previous);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAPI();\r\n    setpokemonCount(StorageAccess.getPokemonCount());\r\n    return;\r\n  }, [urlList]);\r\n\r\n  function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  function urlImage(urlDetail) {\r\n    let newUrl = urlDetail.slice(0, -1);\r\n    let id = newUrl.slice(newUrl.lastIndexOf(\"/\") + 1);\r\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;\r\n  }\r\n\r\n  function changeURL(event) {\r\n    if (event.target.dataset.url) {\r\n      setUrlList(event.target.dataset.url);\r\n    } else {\r\n      alert(\"You can go anymore\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"pokedex-box\">\r\n      <div className=\"pokedex-box-content\">\r\n        <h2>Pokemon List</h2>\r\n\r\n        <div className=\"info-inventory\">\r\n          <Link to=\"/pokemon-app/mypokemon\">\r\n            <p>\r\n              <small>Your pokemon: {pokemonCount}</small>\r\n            </p>\r\n          </Link>\r\n        </div>\r\n\r\n        {/* <div className=\"pokedex-content\">\r\n          {pokemonList.map((item) => (\r\n            <Link to={`/pokemon-app/detail/${item.name}`} key={item.name}>\r\n              <div className=\"pokemon-box\">\r\n                <div className=\"pokemon-card\">\r\n                  <div className=\"image-box\">\r\n                    <img src={urlImage(item.url)} />\r\n                  </div>\r\n                  <div className=\"pokemon-name\">\r\n                    <h3>{capitalizeFirstLetter(item.name)}</h3>\r\n                  </div>\r\n                  <div className=\"go\">\r\n                    <h4>{\">\"}</h4>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n        </div> */}\r\n\r\n        <div className=\"mypokedex-content\">\r\n          {pokemonList.map((item) => (\r\n            <div className=\"mypokedex-card-box\" key={item.name}>\r\n              <Link to={`/pokemon-app/detail/${item.name}`}>\r\n                <div className=\"mypokedex-card\">\r\n                  <div className=\"mypokedex-img\">\r\n                    <img src={urlImage(item.url)} />\r\n                  </div>\r\n\r\n                  <div className=\"pokedex-info\">\r\n                    <h3>{capitalizeFirstLetter(item.name)}</h3>\r\n                  </div>\r\n\r\n                  <div className=\"btn go\">{\">\"}</div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"btn-group\">\r\n          <div className=\"btn btn-pagination\" onClick={changeURL} data-url={urlPrev}>\r\n            {\"<\"}\r\n          </div>\r\n          <div className=\"btn btn-pagination\" onClick={changeURL} data-url={urlNext}>\r\n            {\">\"}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport StorageAccess from \"../../data/localStorage\";\r\nimport \"./Mypokedex.css\";\r\n\r\nconst Mypokedex = () => {\r\n  const [myPokemonList, setmyPokemonList] = useState(StorageAccess.fetchLocalStorage());\r\n\r\n  const refreshPokemon = () => {\r\n    setmyPokemonList(StorageAccess.fetchLocalStorage());\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshPokemon();\r\n  }, []);\r\n\r\n  function capitalizeFirstLetter(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n\r\n  const releaseHandler = (event) => {\r\n    let nickname = event.target.dataset.id;\r\n\r\n    StorageAccess.deleteFromLocalStorage(nickname);\r\n    refreshPokemon();\r\n  };\r\n\r\n  return (\r\n    <div className=\"detail-box\">\r\n      <div className=\"mypokedex-box\">\r\n        <h2>My Pokemon</h2>\r\n        <div className=\"mypokedex-content\">\r\n          {myPokemonList.map((item) => (\r\n            <div className=\"mypokedex-card-box\" key={item.nickname}>\r\n              <div className=\"mypokedex-card\">\r\n                <div className=\"mypokedex-img\">\r\n                  <img src={item.urlImage} />\r\n                </div>\r\n\r\n                <div className=\"mypokedex-info\">\r\n                  <h3>{capitalizeFirstLetter(item.pokemon)}</h3>\r\n                  <small>{capitalizeFirstLetter(item.nickname)}</small>\r\n                </div>\r\n\r\n                <div className=\"btn btn-release\" onClick={releaseHandler} data-id={item.nickname}>\r\n                  Release\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mypokedex;\r\n","import \"./App.css\";\nimport Header from \"./component/Header/Header\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Details from \"./pages/details/Details\";\nimport Pokedex from \"./pages/pokedex/Pokedex\";\nimport Mypokedex from \"./pages/mypokedex/Mypokedex\";\n\nfunction App() {\n  // const [urlDetail, seturlDetail] = useState(\"\");\n\n  // const setUrl = (url) => {\n  //   seturlDetail(url);\n  //   console.log(url);\n  // };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <main>\n          <Switch>\n            <Route exact path=\"/pokemon-app\">\n              {/* <Pokedex setUrlDetail={setUrl} /> */}\n              <Pokedex />\n            </Route>\n            <Route path=\"/pokemon-app/detail/:pokemon\">\n              <Details />\n            </Route>\n            <Route path=\"/pokemon-app/mypokemon\">\n              <Mypokedex />\n            </Route>\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}